{"ast":null,"code":"var _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\description_page\\\\description.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport MovieDescription from './movie_description/movie_description';\nimport ActorDescription from './actor_description/actor_desctipion';\n\nfunction Description(props) {\n  const [dataObject, setDataObject] = useState(props.location.object);\n  useEffect(() => {\n    if (dataObject === undefined) {\n      let underScoreIndex = props.location.pathname.indexOf(\"_\");\n      let dataType = props.location.pathname.substring(1, underScoreIndex);\n      let lastSlashIndex = props.location.pathname.lastIndexOf('/');\n      let id = props.location.pathname.substring(lastSlashIndex + 1, props.location.pathname.length);\n      let fetchUrl = `http://localhost:5000/${dataType}s/api/${id}`;\n      axios({\n        method: 'GET',\n        url: fetchUrl\n      }).then(res => {\n        console.log(res.data);\n\n        if (dataType === 'movie') {\n          setDataObject({\n            id: res.data._id,\n            name: res.data.title,\n            image: res.data.poster,\n            description: res.data.description,\n            infoArr: res.data.actors,\n            subInfo: [res.data.rating, res.data.director, res.data.year],\n            type: 'movie'\n          });\n        } else {\n          setDataObject({\n            id: res.data._id,\n            name: res.data.name,\n            image: res.data.image,\n            description: res.data.description,\n            infoArr: res.data.movies,\n            subInfo: [res.data.birth_year],\n            type: 'actor'\n          });\n        }\n      });\n    }\n  }, [dataObject, props.location.pathname]);\n\n  function loadComponent(dataObject) {\n    if (dataObject.type === 'movie') {\n      return /*#__PURE__*/React.createElement(MovieDescription, {\n        movie: dataObject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ActorDescription, {\n        actor: dataObject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"description_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Description\"), dataObject !== undefined ? loadComponent(dataObject) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 69\n    }\n  }, \"Loading\"));\n}\n\nexport default Description;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/description_page/description.jsx"],"names":["React","useEffect","useState","axios","MovieDescription","ActorDescription","Description","props","dataObject","setDataObject","location","object","undefined","underScoreIndex","pathname","indexOf","dataType","substring","lastSlashIndex","lastIndexOf","id","length","fetchUrl","method","url","then","res","console","log","data","_id","name","title","image","poster","description","infoArr","actors","subInfo","rating","director","year","type","movies","birth_year","loadComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport MovieDescription from './movie_description/movie_description';\r\nimport ActorDescription from './actor_description/actor_desctipion';\r\n\r\nfunction Description(props) {\r\n\r\n    const [dataObject, setDataObject] = useState(props.location.object);\r\n\r\n    useEffect(() => {\r\n        if (dataObject === undefined) {\r\n\r\n            let underScoreIndex = props.location.pathname.indexOf(\"_\");\r\n            let dataType = props.location.pathname.substring(1, underScoreIndex);\r\n\r\n            let lastSlashIndex = props.location.pathname.lastIndexOf('/');\r\n            let id = props.location.pathname.substring(lastSlashIndex + 1, props.location.pathname.length);\r\n\r\n\r\n            let fetchUrl = `http://localhost:5000/${dataType}s/api/${id}`;\r\n\r\n            axios({\r\n                method: 'GET',\r\n                url: fetchUrl\r\n            }).then(res => {\r\n                console.log(res.data)\r\n                if (dataType === 'movie') {\r\n                    setDataObject({\r\n                        id: res.data._id,\r\n                        name: res.data.title,\r\n                        image: res.data.poster,\r\n                        description: res.data.description,\r\n                        infoArr: res.data.actors,\r\n                        subInfo: [res.data.rating, res.data.director, res.data.year],\r\n                        type: 'movie'\r\n                    })\r\n                } else {\r\n                    setDataObject({\r\n                        id: res.data._id,\r\n                        name: res.data.name,\r\n                        image: res.data.image,\r\n                        description: res.data.description,\r\n                        infoArr: res.data.movies,\r\n                        subInfo: [res.data.birth_year],\r\n                        type: 'actor'\r\n                    })\r\n                }\r\n\r\n            })\r\n        }\r\n    }, [dataObject, props.location.pathname]);\r\n\r\n\r\n    function loadComponent(dataObject) {\r\n\r\n        if (dataObject.type === 'movie') {\r\n            return <MovieDescription movie={dataObject} />\r\n        } else {\r\n            return <ActorDescription actor={dataObject} />\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"description_container\">\r\n            <h1>Description</h1>\r\n            {dataObject !== undefined ? loadComponent(dataObject) : <h4>Loading</h4>}\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Description;"]},"metadata":{},"sourceType":"module"}