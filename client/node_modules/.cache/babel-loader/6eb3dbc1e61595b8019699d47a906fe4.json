{"ast":null,"code":"var _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\lists\\\\data_lists.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport list_view from \"../../Assets/UI Icons/list-view.svg\";\nimport grid_view from \"../../Assets/UI Icons/grid-view.svg\";\n\nfunction ListComponent(props) {\n  const [dataList, setDataList] = useState([]); // const [gridView, setGridView] = useState(JSON.parse(sessionStorage.getItem('moviesGridViewBoolean')) || false);\n  // useEffect(() => {\n  //     /*\n  //     *  Which ever view is selected, disable to corresponding button and reduce its opacity by 50%.\n  //     *  The other button will maintain its 100% opacity, changes it occordingly based on the current view.\n  //     */\n  //     sessionStorage.setItem('moviesGridViewBoolean', gridView);\n  //     if (gridView) {\n  //         document.getElementById(\"list_view_button\").disabled = false;\n  //         document.getElementById(\"list_view_button\").style.opacity = \"1\";\n  //         document.getElementById(\"grid_view_button\").disabled = true;\n  //         document.getElementById(\"grid_view_button\").style.opacity = \"0.5\";\n  //     } else {\n  //         document.getElementById(\"grid_view_button\").disabled = false;\n  //         document.getElementById(\"grid_view_button\").style.opacity = \"1\";\n  //         document.getElementById(\"list_view_button\").disabled = true;\n  //         document.getElementById(\"list_view_button\").style.opacity = \"0.5\";\n  //     }\n  // }, [gridView])\n\n  useEffect(() => {\n    let pathName = props.location.pathname;\n    let underScoreIndex = pathName.indexOf(\"_\");\n    let dataName = props.location.pathname.substring(1, underScoreIndex);\n    let fetchUrl = `http://localhost:5000/${dataName}/api`;\n    axios({\n      method: 'GET',\n      url: fetchUrl\n    }).then(res => {\n      setDataList(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(dataList);\n  }, [dataList]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movies_list_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"movies_list_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Movies\"), dataList.map((actor, i) => /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"actor.title\")));\n}\n\nexport default ListComponent;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/lists/data_lists.jsx"],"names":["React","axios","useState","useEffect","ListComponent","props","dataList","setDataList","pathName","location","pathname","underScoreIndex","indexOf","dataName","substring","fetchUrl","method","url","then","res","data","console","log","map","actor","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AAMA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAD0B,CAE1B;AAMA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAIA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIK,QAAQ,GAAGH,KAAK,CAACI,QAAN,CAAeC,QAA9B;AACA,QAAIC,eAAe,GAAGH,QAAQ,CAACI,OAAT,CAAiB,GAAjB,CAAtB;AACA,QAAIC,QAAQ,GAAGR,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBI,SAAxB,CAAkC,CAAlC,EAAqCH,eAArC,CAAf;AACA,QAAII,QAAQ,GAAI,yBAAwBF,QAAS,MAAjD;AAIAZ,IAAAA,KAAK,CAAC;AACFe,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAEF;AAFH,KAAD,CAAL,CAGGG,IAHH,CAGQC,GAAG,IAAI;AACXZ,MAAAA,WAAW,CAACY,GAAG,CAACC,IAAL,CAAX;AAEH,KAND;AASH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBAjB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AASA,sBAEI;AAAK,IAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,EAAE,EAAC,mBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EASKA,QAAQ,CAACiB,GAAT,CAAa,CAACC,KAAD,EAAQC,CAAR,kBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,CATL,CAFJ;AA0BH;;AAED,eAAerB,aAAf","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport list_view from '../../Assets/UI Icons/list-view.svg'\r\nimport grid_view from '../../Assets/UI Icons/grid-view.svg'\r\n\r\n\r\n\r\nfunction ListComponent(props) {\r\n    const [dataList, setDataList] = useState([]);\r\n    // const [gridView, setGridView] = useState(JSON.parse(sessionStorage.getItem('moviesGridViewBoolean')) || false);\r\n\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     /*\r\n    //     *  Which ever view is selected, disable to corresponding button and reduce its opacity by 50%.\r\n    //     *  The other button will maintain its 100% opacity, changes it occordingly based on the current view.\r\n    //     */\r\n\r\n    //     sessionStorage.setItem('moviesGridViewBoolean', gridView);\r\n\r\n\r\n    //     if (gridView) {\r\n    //         document.getElementById(\"list_view_button\").disabled = false;\r\n    //         document.getElementById(\"list_view_button\").style.opacity = \"1\";\r\n\r\n    //         document.getElementById(\"grid_view_button\").disabled = true;\r\n    //         document.getElementById(\"grid_view_button\").style.opacity = \"0.5\";\r\n\r\n    //     } else {\r\n    //         document.getElementById(\"grid_view_button\").disabled = false;\r\n    //         document.getElementById(\"grid_view_button\").style.opacity = \"1\";\r\n\r\n    //         document.getElementById(\"list_view_button\").disabled = true;\r\n    //         document.getElementById(\"list_view_button\").style.opacity = \"0.5\";\r\n\r\n    //     }\r\n\r\n\r\n\r\n    // }, [gridView])\r\n\r\n    useEffect(() => {\r\n\r\n        let pathName = props.location.pathname;\r\n        let underScoreIndex = pathName.indexOf(\"_\");\r\n        let dataName = props.location.pathname.substring(1, underScoreIndex);\r\n        let fetchUrl = `http://localhost:5000/${dataName}/api`;\r\n\r\n\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: fetchUrl\r\n        }).then(res => {\r\n            setDataList(res.data)\r\n\r\n        })\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(dataList);\r\n    }, [dataList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"movies_list_content\">\r\n            <h1 id=\"movies_list_title\">Movies</h1>\r\n            {/* <div id=\"display_options\">\r\n                <input onClick={() => { }} className=\"view_buttons\" id=\"list_view_button\" type=\"image\" src={list_view} alt=\"List view button\" />\r\n                <input onClick={() => { }} className=\"view_buttons\" id=\"grid_view_button\" type=\"image\" src={grid_view} alt=\"Grid view button\" />\r\n            </div> */}\r\n\r\n\r\n\r\n            {dataList.map((actor, i) => (\r\n                <h4>actor.title</h4>\r\n            ))}\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ListComponent;"]},"metadata":{},"sourceType":"module"}