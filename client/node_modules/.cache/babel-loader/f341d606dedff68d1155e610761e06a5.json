{"ast":null,"code":"var _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\login\\\\login_modal.jsx\";\nimport React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './login_modal.scss';\n\nfunction LoginModal() {\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  console.log(user); // Retrieve all input field values, ignoring the send button, and put them into an array for validation.\n\n  function getInputFieldValues(form) {\n    let inputValuesArray = [];\n\n    for (let i = 0; i < form.length; i++) {\n      if (form[i].id !== \"login_button\") {\n        inputValuesArray.push(form[i].value);\n      }\n    }\n\n    return inputValuesArray;\n  }\n\n  async function authFields(event) {\n    event.preventDefault();\n    let formFieldValues = await getInputFieldValues(event.target);\n    let formObject = {\n      email: formFieldValues[0],\n      password: formFieldValues[1]\n    };\n    console.log(formObject);\n    await fetch('http://localhost:5000/auth/api/account/login', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(formObject)\n    }).then(response => response.json()).then(result => {\n      setUser(result);\n      console.log(JSON.stringify(user));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login_form\",\n    onSubmit: authFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email_input\",\n    className: \"form_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email_input\",\n    className: \"form_field\",\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"form_text_area\",\n    className: \"form_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password_input\",\n    className: \"form_field\",\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login_button\",\n    type: \"submit\",\n    value: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default LoginModal;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/login/login_modal.jsx"],"names":["React","useContext","UserContext","LoginModal","user","setUser","console","log","getInputFieldValues","form","inputValuesArray","i","length","id","push","value","authFields","event","preventDefault","formFieldValues","target","formObject","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","result"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport './login_modal.scss';\r\n\r\nfunction LoginModal() {\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    console.log(user);\r\n\r\n\r\n\r\n    // Retrieve all input field values, ignoring the send button, and put them into an array for validation.\r\n    function getInputFieldValues(form) {\r\n\r\n        let inputValuesArray = [];\r\n\r\n        for (let i = 0; i < form.length; i++) {\r\n\r\n            if (form[i].id !== \"login_button\") {\r\n\r\n                inputValuesArray.push(form[i].value);\r\n\r\n            }\r\n        }\r\n\r\n        return inputValuesArray;\r\n    }\r\n\r\n\r\n    async function authFields(event) {\r\n\r\n        event.preventDefault();\r\n        let formFieldValues = await getInputFieldValues(event.target);\r\n        let formObject = {\r\n            email: formFieldValues[0],\r\n            password: formFieldValues[1]\r\n        };\r\n\r\n        console.log(formObject);\r\n\r\n\r\n\r\n        await fetch('http://localhost:5000/auth/api/account/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formObject)\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                setUser(result);\r\n                console.log(JSON.stringify(user));\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"login_modal\">\r\n            <h1>Login</h1>\r\n            <form id=\"login_form\" onSubmit={authFields}>\r\n                <label htmlFor=\"email_input\" className=\"form_label\">Email</label>\r\n                <input id=\"email_input\" className=\"form_field\" type=\"email\" name=\"email\" />\r\n                <label htmlFor=\"form_text_area\" className=\"form_label\">Password</label>\r\n                <input id=\"password_input\" className=\"form_field\" type=\"password\" name=\"password\" />\r\n                <input id=\"login_button\" type=\"submit\" value=\"Login\" />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginModal;\r\n\r\n"]},"metadata":{},"sourceType":"module"}