{"ast":null,"code":"var _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\lists\\\\data_lists.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport './data_lists.scss';\nimport Views from './view_components/views';\n\nfunction ListComponent(props) {\n  const [dataList, setDataList] = useState([]);\n  const [pathName] = useState(props.location.pathname);\n  const [isMoviesPage, setIsMoviesPage] = useState(false);\n  useEffect(() => {\n    let underScoreIndex = pathName.indexOf(\"_\");\n    let dataName = pathName.substring(1, underScoreIndex);\n    let fetchUrl = 'http://localhost:5000/' + dataName + '/api';\n    axios({\n      method: 'GET',\n      url: fetchUrl\n    }).then(res => {\n      setDataList(res.data);\n    });\n\n    if (dataName === \"movies\") {\n      setIsMoviesPage(true);\n    } else {\n      setIsMoviesPage(false);\n    }\n  }, [pathName]);\n  useEffect(() => {\n    console.log(\"Calling\");\n    console.log(dataList);\n\n    if (dataList > 0 && isMoviesPage) {\n      console.log(\"yep\");\n      createDataObjectsFromMovies(dataList);\n    }\n  }, [dataList, isMoviesPage]);\n\n  function createDataObjectsFromMovies(data) {\n    let dataObjectsArray = [];\n    let dataObject = {\n      'name': '',\n      'image': '',\n      'description': '',\n      'infoArr': [],\n      'subInfo': []\n    };\n    data.map(movie => {\n      dataObject.name = movie.title;\n      dataObject.image = movie.poster;\n      dataObject.description = movie.description;\n      dataObject.infoArr = movie.actors;\n      dataObject.subInfo = [movie.rating, movie.director, movie.year];\n      console.log(dataObject);\n      return dataObjectsArray.push(dataObject);\n    });\n    console.log(dataObjectsArray);\n    return dataObjectsArray;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"data_list_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"data_list_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, isMoviesPage ? \"Movies\" : \"Actors\"), /*#__PURE__*/React.createElement(Views, {\n    data: dataList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default ListComponent;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/lists/data_lists.jsx"],"names":["React","axios","useState","useEffect","Views","ListComponent","props","dataList","setDataList","pathName","location","pathname","isMoviesPage","setIsMoviesPage","underScoreIndex","indexOf","dataName","substring","fetchUrl","method","url","then","res","data","console","log","createDataObjectsFromMovies","dataObjectsArray","dataObject","map","movie","name","title","image","poster","description","infoArr","actors","subInfo","rating","director","year","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport './data_lists.scss';\r\nimport Views from './view_components/views';\r\n\r\n\r\n\r\n\r\nfunction ListComponent(props) {\r\n    const [dataList, setDataList] = useState([]);\r\n    const [pathName] = useState(props.location.pathname);\r\n    const [isMoviesPage, setIsMoviesPage] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let underScoreIndex = pathName.indexOf(\"_\");\r\n        let dataName = pathName.substring(1, underScoreIndex);\r\n        let fetchUrl = 'http://localhost:5000/' + dataName + '/api';\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: fetchUrl\r\n        }).then(res => {\r\n            setDataList(res.data)\r\n\r\n        })\r\n\r\n        if (dataName === \"movies\") {\r\n            setIsMoviesPage(true);\r\n        } else {\r\n            setIsMoviesPage(false);\r\n        }\r\n\r\n    }, [pathName]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Calling\")\r\n        console.log(dataList)\r\n\r\n        if (dataList > 0 && isMoviesPage) {\r\n            console.log(\"yep\")\r\n            createDataObjectsFromMovies(dataList);\r\n\r\n        }\r\n    }, [dataList, isMoviesPage]);\r\n\r\n    function createDataObjectsFromMovies(data) {\r\n        let dataObjectsArray = [];\r\n        let dataObject = {\r\n            'name': '',\r\n            'image': '',\r\n            'description': '',\r\n            'infoArr': [],\r\n            'subInfo': []\r\n        }\r\n\r\n        data.map((movie) => {\r\n            dataObject.name = movie.title;\r\n            dataObject.image = movie.poster;\r\n            dataObject.description = movie.description;\r\n            dataObject.infoArr = movie.actors;\r\n            dataObject.subInfo = [movie.rating, movie.director, movie.year]\r\n\r\n            console.log(dataObject);\r\n\r\n            return dataObjectsArray.push(dataObject);\r\n\r\n\r\n        })\r\n\r\n\r\n        console.log(dataObjectsArray);\r\n        return dataObjectsArray;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"data_list_content\">\r\n            <h1 id=\"data_list_title\">{isMoviesPage ? \"Movies\" : \"Actors\"}</h1>\r\n\r\n\r\n\r\n\r\n\r\n            {/* Create Actor/Movie Object and pass it down through props to Description Component\r\n            Movie: {\r\n                name: movie.title,\r\n                image: movie.poster,\r\n                description: movie.description,\r\n                array: movie.actors,\r\n                subInfo: {\r\n                    1: movie.rating,\r\n                    2: movie.director,\r\n                    3: movie.releaseDate,\r\n                    4: movie.year\r\n                }\r\n            } \r\n            Actor: {\r\n                name: actor.name,\r\n                image: actor.image,\r\n                description: actor.description,\r\n                array: actor.movies,\r\n                subInfo: {\r\n                    1: actor.birth_year\r\n                }\r\n            }*/}\r\n\r\n\r\n            <Views data={dataList} />\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ListComponent;"]},"metadata":{},"sourceType":"module"}