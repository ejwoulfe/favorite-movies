{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Favorite Movies Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Favorite Movies Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\login_page\\\\login.jsx\";\nimport React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './login.scss';\n\nfunction LoginPage() {\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser; // Retrieve all input field values, ignoring the send button, and put them into an array for validation.\n\n\n  function getInputFieldValues(form) {\n    var inputValuesArray = [];\n\n    for (var i = 0; i < form.length; i++) {\n      if (form[i].id !== \"login_button\") {\n        inputValuesArray.push(form[i].value);\n      }\n    }\n\n    return inputValuesArray;\n  }\n\n  function authFields(_x) {\n    return _authFields.apply(this, arguments);\n  }\n\n  function _authFields() {\n    _authFields = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var formFieldValues, formObject;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return getInputFieldValues(event.target);\n\n            case 3:\n              formFieldValues = _context.sent;\n              formObject = {\n                email: formFieldValues[0],\n                password: formFieldValues[1]\n              };\n              _context.next = 7;\n              return fetch('http://localhost:5000/auth/api/account/login', {\n                method: \"POST\",\n                headers: {\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify(formObject)\n              }).then(function (response) {\n                if (!response.ok) {\n                  return Promise.reject(response);\n                } else {\n                  return response.json();\n                }\n              }).then(function (result) {\n                setUser(result.user);\n                console.log(result.token); // localStorage.setItem('token', )\n              }).catch(function (error) {\n                console.error('Error: ', error);\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _authFields.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login_form\",\n    onSubmit: authFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email_input\",\n    className: \"form_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email_input\",\n    className: \"form_field\",\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"form_text_area\",\n    className: \"form_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password_input\",\n    className: \"form_field\",\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"login_button\",\n    type: \"submit\",\n    value: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/login_page/login.jsx"],"names":["React","useContext","UserContext","LoginPage","user","setUser","getInputFieldValues","form","inputValuesArray","i","length","id","push","value","authFields","event","preventDefault","target","formFieldValues","formObject","email","password","fetch","method","headers","body","JSON","stringify","then","response","ok","Promise","reject","json","result","console","log","token","catch","error"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport './login.scss';\r\n\r\nfunction LoginPage() {\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n\r\n\r\n\r\n    // Retrieve all input field values, ignoring the send button, and put them into an array for validation.\r\n    function getInputFieldValues(form) {\r\n\r\n        let inputValuesArray = [];\r\n\r\n        for (let i = 0; i < form.length; i++) {\r\n\r\n            if (form[i].id !== \"login_button\") {\r\n\r\n                inputValuesArray.push(form[i].value);\r\n\r\n            }\r\n        }\r\n\r\n        return inputValuesArray;\r\n    }\r\n\r\n\r\n    async function authFields(event) {\r\n\r\n        event.preventDefault();\r\n        let formFieldValues = await getInputFieldValues(event.target);\r\n        let formObject = {\r\n            email: formFieldValues[0],\r\n            password: formFieldValues[1]\r\n        };\r\n\r\n\r\n\r\n\r\n        await fetch('http://localhost:5000/auth/api/account/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formObject)\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    return Promise.reject(response);\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then((result) => {\r\n                setUser(result.user);\r\n                console.log(result.token);\r\n                // localStorage.setItem('token', )\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"login_modal\">\r\n            <h1>Login</h1>\r\n            <form id=\"login_form\" onSubmit={authFields}>\r\n                <label htmlFor=\"email_input\" className=\"form_label\">Email</label>\r\n                <input id=\"email_input\" className=\"form_field\" type=\"email\" name=\"email\" />\r\n                <label htmlFor=\"form_text_area\" className=\"form_label\">Password</label>\r\n                <input id=\"password_input\" className=\"form_field\" type=\"password\" name=\"password\" />\r\n                <input id=\"login_button\" type=\"submit\" value=\"Login\" />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}