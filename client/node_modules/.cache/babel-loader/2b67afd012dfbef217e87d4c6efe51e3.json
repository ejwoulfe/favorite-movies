{"ast":null,"code":"var _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\movies_list\\\\movies_list.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport './movies_list.scss';\nimport list_view from \"../../Assets/UI Icons/list-view.svg\";\nimport grid_view from \"../../Assets/UI Icons/grid-view.svg\";\nimport GridView from './grid_view/grid_view';\nimport ListView from './list_view/list_view';\n\nfunction MoviesList() {\n  const [moviesList, setMoviesList] = useState([]);\n  const [gridView, setGridView] = useState(Boolean(localStorage.getItem('gridViewBoolean')) || false);\n  useEffect(() => {\n    /*\r\n    *  Which ever view is selected, disable to corresponding button and reduce its opacity by 50%.\r\n    *  The other button will maintain its 100% opacity, changes it occordingly based on the current view.\r\n    */\n    localStorage.setItem('gridViewBoolean', gridView);\n\n    if (gridView) {\n      document.getElementById(\"list_view_button\").disabled = false;\n      document.getElementById(\"list_view_button\").style.opacity = \"1\";\n      document.getElementById(\"grid_view_button\").disabled = true;\n      document.getElementById(\"grid_view_button\").style.opacity = \"0.5\";\n    } else {\n      document.getElementById(\"grid_view_button\").disabled = false;\n      document.getElementById(\"grid_view_button\").style.opacity = \"1\";\n      document.getElementById(\"list_view_button\").disabled = true;\n      document.getElementById(\"list_view_button\").style.opacity = \"0.5\";\n    }\n  }, [gridView]);\n  useEffect(() => {\n    localStorage.setItem('gridViewBoolean', gridView);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/movies/api'\n    }).then(res => {\n      setMoviesList(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"movies_list_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"movies_list_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"display_options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onClick: () => {\n      setGridView(gridView => !gridView);\n    },\n    className: \"view_buttons\",\n    id: \"list_view_button\",\n    type: \"image\",\n    src: list_view,\n    alt: \"List view button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onClick: () => {\n      setGridView(gridView => !gridView);\n    },\n    className: \"view_buttons\",\n    id: \"grid_view_button\",\n    type: \"image\",\n    src: grid_view,\n    alt: \"Grid view button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), gridView ? /*#__PURE__*/React.createElement(GridView, {\n    movies: moviesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(ListView, {\n    movies: moviesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 60\n    }\n  }));\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/movies_list/movies_list.jsx"],"names":["React","axios","useState","useEffect","GridView","ListView","MoviesList","moviesList","setMoviesList","gridView","setGridView","Boolean","localStorage","getItem","setItem","document","getElementById","disabled","style","opacity","method","url","then","res","data","list_view","grid_view"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport './movies_list.scss';\r\nimport list_view from '../../Assets/UI Icons/list-view.svg'\r\nimport grid_view from '../../Assets/UI Icons/grid-view.svg'\r\nimport GridView from './grid_view/grid_view';\r\nimport ListView from './list_view/list_view';\r\n\r\n\r\nfunction MoviesList() {\r\n    const [moviesList, setMoviesList] = useState([]);\r\n    const [gridView, setGridView] = useState(Boolean(localStorage.getItem('gridViewBoolean')) || false);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        /*\r\n        *  Which ever view is selected, disable to corresponding button and reduce its opacity by 50%.\r\n        *  The other button will maintain its 100% opacity, changes it occordingly based on the current view.\r\n        */\r\n\r\n        localStorage.setItem('gridViewBoolean', gridView);\r\n\r\n        if (gridView) {\r\n            document.getElementById(\"list_view_button\").disabled = false;\r\n            document.getElementById(\"list_view_button\").style.opacity = \"1\";\r\n\r\n            document.getElementById(\"grid_view_button\").disabled = true;\r\n            document.getElementById(\"grid_view_button\").style.opacity = \"0.5\";\r\n\r\n        } else {\r\n            document.getElementById(\"grid_view_button\").disabled = false;\r\n            document.getElementById(\"grid_view_button\").style.opacity = \"1\";\r\n\r\n            document.getElementById(\"list_view_button\").disabled = true;\r\n            document.getElementById(\"list_view_button\").style.opacity = \"0.5\";\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [gridView])\r\n\r\n    useEffect(() => {\r\n\r\n        localStorage.setItem('gridViewBoolean', gridView);\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:5000/movies/api'\r\n        }).then(res => {\r\n            setMoviesList(res.data)\r\n\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div id=\"movies_list_content\">\r\n            <h1 id=\"movies_list_title\">Movies</h1>\r\n            <div id=\"display_options\">\r\n                <input onClick={() => { setGridView((gridView) => !gridView) }} className=\"view_buttons\" id=\"list_view_button\" type=\"image\" src={list_view} alt=\"List view button\" />\r\n                <input onClick={() => { setGridView((gridView) => !gridView) }} className=\"view_buttons\" id=\"grid_view_button\" type=\"image\" src={grid_view} alt=\"Grid view button\" />\r\n            </div>\r\n\r\n\r\n\r\n            {gridView ? <GridView movies={moviesList} /> : <ListView movies={moviesList} />}\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}