{"ast":null,"code":"var _jsxFileName = \"D:\\\\Favorite Movies Project\\\\client\\\\src\\\\components\\\\lists\\\\data_lists.jsx\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport './data_lists.scss';\nimport Views from './view_components/views';\n\nfunction ListComponent(props) {\n  const [dataList, setDataList] = useState([]);\n  const [pathName] = useState(props.location.pathname);\n  const [isMoviesPage, setIsMoviesPage] = useState(false);\n  useEffect(() => {\n    let underScoreIndex = pathName.indexOf(\"_\");\n    let dataName = pathName.substring(1, underScoreIndex);\n    let fetchUrl = 'http://localhost:5000/' + dataName + '/api';\n    axios({\n      method: 'GET',\n      url: fetchUrl\n    }).then(res => {\n      setDataList(res.data);\n    });\n\n    if (dataName === \"movies\") {\n      setIsMoviesPage(true);\n    } else {\n      setIsMoviesPage(false);\n    }\n  }, [pathName]);\n  useEffect(() => {\n    if (dataList.length > 0 && isMoviesPage) {\n      createDataObjectsFromMovies(dataList);\n    } else if (dataList.lenght > 0 && !isMoviesPage) {\n      createDataObjectsFromActors(dataList);\n    }\n  }, [dataList, isMoviesPage]);\n\n  function createDataObjectsFromMovies(data) {\n    let dataObjectsArray = [];\n    let dataObject = {\n      name: '',\n      image: '',\n      description: '',\n      infoArr: [],\n      subInfo: [],\n      type: ''\n    };\n    dataObjectsArray = data.map(movie => {\n      dataObject = {};\n      dataObject.name = movie.title;\n      dataObject.image = movie.poster;\n      dataObject.description = movie.description;\n      dataObject.infoArr = movie.actors;\n      dataObject.subInfo = [movie.rating, movie.director, movie.year];\n      dataObject.type = 'movie';\n      return dataObject;\n    });\n    return dataObjectsArray;\n  }\n\n  function createDataObjectsFromActors(data) {\n    let dataObjectsArray = [];\n    let dataObject = {\n      name: '',\n      image: '',\n      description: '',\n      infoArr: [],\n      subInfo: [],\n      type: ''\n    };\n    dataObjectsArray = data.map(actor => {\n      dataObject = {};\n      dataObject.name = actor.name;\n      dataObject.image = actor.image;\n      dataObject.description = actor.description;\n      dataObject.infoArr = actor.movies;\n      dataObject.subInfo = [actor.birth_year];\n      dataObject.type = 'actor';\n      return dataObject;\n    });\n    return dataObjectsArray;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"data_list_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"data_list_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, isMoviesPage ? \"Movies\" : \"Actors\"), isMoviesPage ? /*#__PURE__*/React.createElement(Views, {\n    data: createDataObjectsFromMovies(dataList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(Views, {\n    data: createDataObjectsFromActors(dataList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 86\n    }\n  }));\n}\n\nexport default ListComponent;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/lists/data_lists.jsx"],"names":["React","axios","useState","useEffect","Views","ListComponent","props","dataList","setDataList","pathName","location","pathname","isMoviesPage","setIsMoviesPage","underScoreIndex","indexOf","dataName","substring","fetchUrl","method","url","then","res","data","length","createDataObjectsFromMovies","lenght","createDataObjectsFromActors","dataObjectsArray","dataObject","name","image","description","infoArr","subInfo","type","map","movie","title","poster","actors","rating","director","year","actor","movies","birth_year"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport './data_lists.scss';\r\nimport Views from './view_components/views';\r\n\r\n\r\n\r\n\r\nfunction ListComponent(props) {\r\n    const [dataList, setDataList] = useState([]);\r\n    const [pathName] = useState(props.location.pathname);\r\n    const [isMoviesPage, setIsMoviesPage] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let underScoreIndex = pathName.indexOf(\"_\");\r\n        let dataName = pathName.substring(1, underScoreIndex);\r\n        let fetchUrl = 'http://localhost:5000/' + dataName + '/api';\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: fetchUrl\r\n        }).then(res => {\r\n            setDataList(res.data)\r\n\r\n        })\r\n\r\n        if (dataName === \"movies\") {\r\n            setIsMoviesPage(true);\r\n        } else {\r\n            setIsMoviesPage(false);\r\n        }\r\n\r\n    }, [pathName]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (dataList.length > 0 && isMoviesPage) {\r\n            createDataObjectsFromMovies(dataList);\r\n\r\n        } else if (dataList.lenght > 0 && !isMoviesPage) {\r\n            createDataObjectsFromActors(dataList);\r\n        }\r\n    }, [dataList, isMoviesPage]);\r\n\r\n    function createDataObjectsFromMovies(data) {\r\n        let dataObjectsArray = [];\r\n        let dataObject = {\r\n            name: '',\r\n            image: '',\r\n            description: '',\r\n            infoArr: [],\r\n            subInfo: [],\r\n            type: ''\r\n        }\r\n\r\n        dataObjectsArray = data.map((movie) => {\r\n\r\n            dataObject = {};\r\n            dataObject.name = movie.title;\r\n            dataObject.image = movie.poster;\r\n            dataObject.description = movie.description;\r\n            dataObject.infoArr = movie.actors;\r\n            dataObject.subInfo = [movie.rating, movie.director, movie.year]\r\n            dataObject.type = 'movie';\r\n\r\n\r\n            return dataObject;\r\n\r\n        })\r\n\r\n        return dataObjectsArray;\r\n\r\n    }\r\n\r\n    function createDataObjectsFromActors(data) {\r\n        let dataObjectsArray = [];\r\n        let dataObject = {\r\n            name: '',\r\n            image: '',\r\n            description: '',\r\n            infoArr: [],\r\n            subInfo: [],\r\n            type: ''\r\n        }\r\n\r\n        dataObjectsArray = data.map((actor) => {\r\n\r\n            dataObject = {};\r\n            dataObject.name = actor.name;\r\n            dataObject.image = actor.image;\r\n            dataObject.description = actor.description;\r\n            dataObject.infoArr = actor.movies;\r\n            dataObject.subInfo = [actor.birth_year];\r\n            dataObject.type = 'actor';\r\n\r\n            return dataObject;\r\n\r\n        })\r\n\r\n        return dataObjectsArray;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"data_list_content\">\r\n            <h1 id=\"data_list_title\">{isMoviesPage ? \"Movies\" : \"Actors\"}</h1>\r\n\r\n\r\n\r\n\r\n\r\n            {/* Create Actor/Movie Object and pass it down through props to Description Component\r\n            Movie: {\r\n                name: movie.title,\r\n                image: movie.poster,\r\n                description: movie.description,\r\n                array: movie.actors,\r\n                subInfo: {\r\n                    1: movie.rating,\r\n                    2: movie.director,\r\n                    3: movie.releaseDate,\r\n                    4: movie.year\r\n                }\r\n            } \r\n            Actor: {\r\n                name: actor.name,\r\n                image: actor.image,\r\n                description: actor.description,\r\n                array: actor.movies,\r\n                subInfo: {\r\n                    1: actor.birth_year\r\n                }\r\n            }*/}\r\n\r\n\r\n            {isMoviesPage ? <Views data={createDataObjectsFromMovies(dataList)} /> : <Views data={createDataObjectsFromActors(dataList)} />}\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ListComponent;"]},"metadata":{},"sourceType":"module"}