{"ast":null,"code":"import React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Views(props) {\n  const [isGridView, setIsGridView] = useState(JSON.parse(sessionStorage.getItem('gridViewBoolean')) || false);\n  useEffect(() => {\n    /*\r\n    *  Which ever view is selected, disable to corresponding button and reduce its opacity by 50%.\r\n    *  The other button will maintain its 100% opacity, changes it occordingly based on the current view.\r\n    */\n    sessionStorage.setItem('gridViewBoolean', isGridView);\n\n    if (isGridView) {\n      document.getElementById(\"list_view_button\").disabled = false;\n      document.getElementById(\"list_view_button\").style.opacity = \"1\";\n      document.getElementById(\"grid_view_button\").disabled = true;\n      document.getElementById(\"grid_view_button\").style.opacity = \"0.5\";\n    } else {\n      document.getElementById(\"grid_view_button\").disabled = false;\n      document.getElementById(\"grid_view_button\").style.opacity = \"1\";\n      document.getElementById(\"list_view_button\").disabled = true;\n      document.getElementById(\"list_view_button\").style.opacity = \"0.5\";\n    }\n  }, [isGridView]);\n  return {\n    /* {isGridView? <GridView data={dataList} : <ListView data={dataList} */\n  };\n}\n\nexport default Views;","map":{"version":3,"sources":["D:/Favorite Movies Project/client/src/components/lists/view_components/views.jsx"],"names":["React","useState","useEffect","Views","props","isGridView","setIsGridView","JSON","parse","sessionStorage","getItem","setItem","document","getElementById","disabled","style","opacity"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAX,KAAyD,KAA1D,CAA5C;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ;;;;AAKAO,IAAAA,cAAc,CAACE,OAAf,CAAuB,iBAAvB,EAA0CN,UAA1C;;AAGA,QAAIA,UAAJ,EAAgB;AAEZO,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,QAA5C,GAAuD,KAAvD;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CE,KAA5C,CAAkDC,OAAlD,GAA4D,GAA5D;AAEAJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,QAA5C,GAAuD,IAAvD;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CE,KAA5C,CAAkDC,OAAlD,GAA4D,KAA5D;AAIH,KAVD,MAUO;AACHJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,QAA5C,GAAuD,KAAvD;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CE,KAA5C,CAAkDC,OAAlD,GAA4D,GAA5D;AAEAJ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,QAA5C,GAAuD,IAAvD;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CE,KAA5C,CAAkDC,OAAlD,GAA4D,KAA5D;AAEH;AAEJ,GA5BQ,EA4BN,CAACX,UAAD,CA5BM,CAAT;AA8BA,SAGI;AAAC;AAAD,GAHJ;AAQH;;AACD,eAAeF,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction Views(props) {\r\n    const [isGridView, setIsGridView] = useState(JSON.parse(sessionStorage.getItem('gridViewBoolean')) || false);\r\n    useEffect(() => {\r\n        /*\r\n        *  Which ever view is selected, disable to corresponding button and reduce its opacity by 50%.\r\n        *  The other button will maintain its 100% opacity, changes it occordingly based on the current view.\r\n        */\r\n\r\n        sessionStorage.setItem('gridViewBoolean', isGridView);\r\n\r\n\r\n        if (isGridView) {\r\n\r\n            document.getElementById(\"list_view_button\").disabled = false;\r\n            document.getElementById(\"list_view_button\").style.opacity = \"1\";\r\n\r\n            document.getElementById(\"grid_view_button\").disabled = true;\r\n            document.getElementById(\"grid_view_button\").style.opacity = \"0.5\";\r\n\r\n\r\n\r\n        } else {\r\n            document.getElementById(\"grid_view_button\").disabled = false;\r\n            document.getElementById(\"grid_view_button\").style.opacity = \"1\";\r\n\r\n            document.getElementById(\"list_view_button\").disabled = true;\r\n            document.getElementById(\"list_view_button\").style.opacity = \"0.5\";\r\n\r\n        }\r\n\r\n    }, [isGridView])\r\n\r\n    return (\r\n\r\n\r\n        {/* {isGridView? <GridView data={dataList} : <ListView data={dataList} */ }\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default Views;"]},"metadata":{},"sourceType":"module"}